service: reporting-api

custom:
  env: ${lower(${opt:stage, self:provider.stage})}
  vpcSettings:
    prod:
      securityGroupIds:
        - sg-052314a1eec2f2567
      subnetIds:
        - subnet-01a6b61d749d10c46
    current: ${self:custom.vpcSettings.${self:custom.env}, ""}

provider:
  name: aws
  runtime: nodejs20.x
  memorySize: 1024 # Keep 1024MB for complex report queries
  timeout: 30 # Increased from 10 seconds for reporting operations
  region: us-east-2
  lambdaHashingVersion: "20220128"
  iam:
    role: arn:aws:iam::428019619026:role/ChurchAppsRole
  environment:
    APP_ENV: ${self:custom.env}
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
  logs:
    httpApi:
      logRetentionInDays: 1
  deploymentBucket:
    name: ${self:service}-deployments-${self:custom.env}
    serverSideEncryption: AES256
  apiGateway:
    throttle:
      rateLimit: 5 # 5 requests per second per IP
      burstLimit: 20 # Allow bursts up to 20 requests per second

layers:
  dependencies:
    path: layer
    name: ${self:service}-dependencies-${self:custom.env}
    description: Dependencies for ${self:service}
    compatibleRuntimes:
      - nodejs20.x

functions:
  api:
    handler: lambda.universal
    layers:
      - { Ref: DependenciesLambdaLayer }
    events:
      - http: ANY {proxy+}
      - http: ANY /
    vpc: ${self:custom.vpcSettings.current}

package:
  patterns:
    - "!node_modules/**"
    - "!layer/**"
    - "!tools/**"
    - "!*.md"
    - "!.eslint*"
    - "!.git*"

plugins:
  - serverless-plugin-utils
